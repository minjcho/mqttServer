# Telegraf Configuration

[agent]
  interval = "100ms"  # 빠른 수집 주기
  round_interval = true
  metric_batch_size = 100  # 적당한 배치 크기
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "200ms"  # 최대 200ms 대기
  flush_jitter = "0s"
  precision = "1ms"  # 밀리초 정밀도로 Python bridge와 맞춤
  hostname = ""
  omit_hostname = false
  # 성능 최적화 및 디버깅
  logfile = ""
  logfile_rotation_max_size = "10MB"
  debug = true

# Output to Kafka
[[outputs.kafka]]
  brokers = ["kafka:9092"]
  topic = "mqtt-messages"
  data_format = "json"
  # Use MQTT topic as Kafka message key (similar to Python bridge)
  routing_key = "mqtt_topic"
  # Kafka producer optimizations
  compression_codec = 0  # 0 = no compression (Redis consumer 호환성)
  required_acks = 1
  max_retry = 3

# Input from MQTT
[[inputs.mqtt_consumer]]
  servers = ["tcp://mosquitto:3123"]
  topics = [
    "sensors/+/coordX",
    "sensors/+/coordY", 
    "sensors/+/motorRPM",
    "sensors/+/coordinates",
    "test/+"
  ]
  data_format = "value"
  data_type = "string"
  # Add MQTT topic as tag to match Python bridge metadata
  topic_tag = "mqtt_topic" 