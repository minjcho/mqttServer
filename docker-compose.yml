version: '3.8'

services:
  mosquitto:
    build:
      context: ./mosquitto
    ports:
      - "1883:1883"
    networks:
      - mqtt_network

  kafka:
    build:
      context: ./kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: "Ig3-2uAZRjWjYQHopuv-rw"
    volumes:
      - ./kafka/scripts:/scripts
      - kafka_data:/tmp/kraft-combined-logs
    restart: unless-stopped
    networks:
      - mqtt_network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Python MQTT-Kafka 브릿지
  mqtt-bridge:
    build:
      context: ./mqtt-bridge
    container_name: mqtt-bridge
    depends_on:
      kafka:
        condition: service_healthy
      mosquitto:
        condition: service_started
    restart: unless-stopped
    networks:
      - mqtt_network

  # Kafka 컨슈머 (간단한 로그 출력용)
  kafka-consumer:
    build:
      context: ./kafka-redis-consumer
    container_name: kafka-consumer
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - mqtt_network
    command: ["python", "consumer.py"]

  kafka-topics-init:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-topics-init
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./kafka/scripts:/scripts
    command: ["/scripts/init_topics.sh"]
    networks:
      - mqtt_network
    restart: "no"

volumes:
  kafka_data:

networks:
  mqtt_network:
    driver: bridge