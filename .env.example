# ===========================================
# Environment Configuration Template
# ===========================================
# Copy this file to .env and fill in your values
# DO NOT commit .env file to version control

# ===========================================
# MQTT Configuration (mqtt-bridge)
# ===========================================
MQTT_HOST=mosquitto
MQTT_PORT=3123
MQTT_TOPICS=sensors/+/coordinates

# ===========================================
# Kafka Configuration
# ===========================================
KAFKA_BROKERS=kafka:9092
KAFKA_TOPIC=mqtt-messages
KAFKA_ACKS=all
KAFKA_RETRIES=3
KAFKA_RETRY_BACKOFF_MS=100

# Kafka Bootstrap Servers (for consumer)
KAFKA_BOOTSTRAP_SERVERS=kafka:9092

# ===========================================
# Redis Configuration (MQTT System)
# ===========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# ===========================================
# PostgreSQL Configuration (QR Login)
# ===========================================
DATABASE_HOST=db
DATABASE_PORT=5433
DATABASE_NAME=qrlogin
DATABASE_USER=qrlogin
DATABASE_PASSWORD=qrlogin123

# ===========================================
# Redis Configuration (QR Login)
# ===========================================
QR_REDIS_HOST=qr-redis
QR_REDIS_PORT=6378

# ===========================================
# JWT Configuration (QR Login)
# ===========================================
# IMPORTANT: Change this in production!
# Generate a secure key: openssl rand -base64 64
JWT_SECRET=please-change-this-secret-key-in-production-environment-min-256-bits-required
JWT_ACCESS_TOKEN_EXPIRATION=900000       # 15 minutes
JWT_REFRESH_TOKEN_EXPIRATION=604800000   # 7 days

# ===========================================
# Spring Configuration (QR Login)
# ===========================================
SPRING_PROFILES_ACTIVE=docker
JAVA_OPTS=-Xmx512m -Xms256m -Djava.security.egd=file:/dev/./urandom

# ===========================================
# Notes
# ===========================================
# 1. For local development, copy this file to .env
# 2. For production, use environment-specific secrets management:
#    - AWS: AWS Secrets Manager or Parameter Store
#    - Kubernetes: Secrets and ConfigMaps
#    - Docker Swarm: Docker Secrets
# 3. Never commit real secrets to version control
# 4. Rotate secrets regularly
